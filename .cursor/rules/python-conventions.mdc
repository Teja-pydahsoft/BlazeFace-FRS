---
globs: *.py
description: Python coding standards and conventions for the project
---

# Python Coding Standards

## Import Organization
```python
# Standard library imports first
import os
import sys
import json
from pathlib import Path

# Third-party imports
import cv2
import numpy as np
import tensorflow as tf
from PIL import Image, ImageTk

# Local imports
from app.core.database import DatabaseManager
from app.utils.camera_utils import CameraManager
```

## Logging Standards
- Use structured logging with proper log levels
- Include context information in log messages
- Log all important operations: database changes, detection results, errors
```python
import logging
logger = logging.getLogger(__name__)
logger.info(f"Operation completed: {details}")
```

## Type Hints
- Use type hints for all function parameters and return values
- Import typing module for complex types
```python
from typing import List, Dict, Any, Optional, Tuple
def process_faces(faces: List[np.ndarray]) -> Dict[str, Any]:
```

## Error Handling
- Use specific exception handling, not bare except clauses
- Provide meaningful error messages
- Log errors with full context
```python
try:
    # operation
except SpecificError as e:
    logger.error(f"Specific operation failed: {e}")
    raise
```

## Configuration Management
- Load configuration from [app/config.json](mdc:app/config.json)
- Use constants from [app/constants.py](mdc:app/constants.py)
- Validate configuration values on startup

## Database Operations
- Always use context managers for database connections
- Handle database errors gracefully
- Use parameterized queries to prevent SQL injection